<</Commands [/c <<	/0 [/c <<		/Config [/c <<			/UIPolicy [/i 3]
>>]
		/HandlerName [/a /JavaScript]
		/Params [/c <<			/ScriptCode [/t (\r\n    	var annots, saveText;\r\n    	//Get annotations\r\n    	//console.show\(\);\r\n    	for \(var pg = 0; pg < this.numPages; pg++\) {\r\n	    	annots = this.getAnnots\({\r\n	    		nPage: pg\r\n	    	}\);\r\n	    	\r\n	    	if \(annots === null\) {\r\n	    		continue;\r\n	    	}\r\n\r\n	    	//Loop through annotations, find Carets and re enter the text for them\r\n	    	//to fix formatting problems\r\n	    	for \(var i = 0; i < annots.length; i++\) {\r\n	    		if \(annots[i].type === "Caret"\) {\r\n	    			console.println\("Caret contents are: " + annots[i].contents\);\r\n	    			saveText = annots[i].contents;\r\n	    			annots[i].contents = saveText;\r\n	    		}\r\n	    	}\r\n    	}\r\n    	app.alert\("Comments Fixed!"\))]
			/ScriptName [/t ()]
>>]
		/Title [/t (Execute JavaScript)]
>>]
>>]
/Description [/t (Fixes oversized comments printing out in Comment Summaries)]
/Input [/c <<	/FileVariation [/i 3]
>>]
/Output [/c <<	/AddToBaseName [/b false]
	/DontOverwrite [/b false]
	/EmbedIndex [/b false]
	/FileVariation [/i 3]
	/HandleOutput [/b true]
	/NumbericNaming [/b false]
	/OptimizePDF [/b true]
	/PresetName [/t (Standard)]
	/RunPDFOptimizer [/b false]
>>]
>>